{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from '@/lib/firebase/config'; \nimport { getUserStroopSessions, saveStroopSession, type FetchedStroopSession, type StroopSessionData } from '@/lib/firebase/firestore-service';\n\n// This function is for the /firebase/hosting/src/app/actions.ts\n// It will be called by /firebase/hosting/src/app/dashboard/page.tsx or /firebase/hosting/src/app/test-page/page.tsx\nexport async function fetchUserSessions(userId: string | undefined): Promise<{\n  success: boolean;\n  data?: FetchedStroopSession[];\n  error?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] fetchUserSessions server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] fetchUserSessions: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided for fetchUserSessions.' };\n  }\n  \n  try {\n    const result = await getUserStroopSessions(userId);\n    console.log('[firebase/hosting/src/app/actions.ts] getUserStroopSessions result from service (for fetchUserSessions):', result.success, result.data?.length, result.error);\n    return result; \n  } catch (error: any) {\n    console.error('[firebase/hosting/src/app/actions.ts] Error in fetchUserSessions calling getUserStroopSessions:', error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred in fetchUserSessions.';\n    return { success: false, error: errorMessage };\n  }\n}\n\n// This function is also for /firebase/hosting/src/app/actions.ts\n// Called by /firebase/hosting/src/app/test-page/page.tsx\nexport async function fetchTestDataForUser(userId: string | undefined): Promise<{\n  success: boolean;\n  data?: FetchedStroopSession[];\n  error?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] fetchTestDataForUser server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] fetchTestDataForUser: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided for fetchTestDataForUser.' };\n  }\n  \n  try {\n    const result = await getUserStroopSessions(userId);\n    console.log('[firebase/hosting/src/app/actions.ts] getUserStroopSessions result from service (for fetchTestDataForUser):', result.success, result.data?.length, result.error);\n    return result;\n  } catch (error: any) {\n    console.error('[firebase/hosting/src/app/actions.ts] Error in fetchTestDataForUser calling getUserStroopSessions:', error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred in fetchTestDataForUser.';\n    return { success: false, error: errorMessage };\n  }\n}\n\nexport async function addMockStroopSessionForUser(userId: string | undefined): Promise<{\n  success: boolean;\n  error?: string;\n  sessionId?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] addMockStroopSessionForUser server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] addMockStroopSessionForUser: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided.' };\n  }\n\n  const mockSessionData: Omit<StroopSessionData, 'userId' | 'timestamp'> & { timestamp: Date } = {\n    timestamp: new Date(),\n    // Round 1 Data\n    round1Id: \"wordMatch\",\n    round1Title: \"Mock Round 1: Match Word Meaning\",\n    round1Score: Math.floor(Math.random() * 18) + 7, // Score between 7-24\n    round1Trials: 25 + Math.floor(Math.random() * 6), // Trials between 25-30\n    round1AverageResponseTimeSeconds: parseFloat((Math.random() * 1.2 + 0.6).toFixed(2)), // Avg time 0.6s-1.8s\n    \n    // Round 2 Data\n    round2Id: \"colorMatch\",\n    round2Title: \"Mock Round 2: Match Font Color\",\n    round2Score: Math.floor(Math.random() * 15) + 5, // Score between 5-19\n    round2Trials: 20 + Math.floor(Math.random() * 6), // Trials between 20-25\n    round2AverageResponseTimeSeconds: parseFloat((Math.random() * 1.8 + 0.8).toFixed(2)), // Avg time 0.8s-2.6s\n    \n    overallAccuracy: Math.random(), // Example additional field\n    totalGameTimeSeconds: Math.floor(Math.random() * 60) + 120, // Example additional field\n  };\n\n  try {\n    const result = await saveStroopSession(userId, mockSessionData);\n    if (result.success) {\n      console.log(`[firebase/hosting/src/app/actions.ts] Mock session ${result.sessionId} added for user ${userId}`);\n    } else {\n      console.error(`[firebase/hosting/src/app/actions.ts] Failed to add mock session for user ${userId}:`, result.error);\n    }\n    return result;\n  } catch (error: any) {\n    console.error(`[firebase/hosting/src/app/actions.ts] Error in addMockStroopSessionForUser calling saveStroopSession for user ${userId}:`, error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred.';\n    return { success: false, error: errorMessage };\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAQsB;IAwBA;IAsBA","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/dashboard/progress-chart.tsx"],"sourcesContent":["\n\"use client\";\n\n// This component is intentionally left empty as part of starting the dashboard over.\n// You can manually delete this file if it's no longer needed.\nexport default function ProgressChart() {\n  return null;\n}\n"],"names":[],"mappings":";;;AACA;AAIe,SAAS;IACtB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/dashboard/score-table.tsx"],"sourcesContent":["\n\"use client\";\n\n// This component is intentionally left empty as part of starting the dashboard over.\n// You can manually delete this file if it's no longer needed.\nexport default function ScoreTable() {\n  return null;\n}\n"],"names":[],"mappings":";;;AACA;AAIe,SAAS;IACtB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\"; \n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { type FetchedStroopSession } from '@/lib/firebase/firestore-service';\nimport { fetchUserSessions } from '@/app/actions'; \nimport ProgressChart from '@/components/dashboard/progress-chart';\nimport ScoreTable from '@/components/dashboard/score-table';\n\n\nexport default function DashboardPage() {\n  const { user, loading: authLoading } = useAuth();\n  const router = useRouter();\n  const [sessions, setSessions] = useState<FetchedStroopSession[]>([]);\n  const [loadingSessions, setLoadingSessions] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!authLoading && !user) {\n      const currentPath = typeof window !== 'undefined' ? window.location.pathname + window.location.search : '/dashboard';\n      router.push(`/login?redirect=${encodeURIComponent(currentPath)}`);\n    } else if (user && user.uid) {\n      setLoadingSessions(true);\n      setError(null);\n      \n      async function loadSessions() {\n        const response = await fetchUserSessions(user.uid);\n        if (response && typeof response === 'object' && 'success' in response) {\n          if (response.success && response.data) {\n            setSessions(response.data);\n            setError(null); \n          } else {\n            let displayError = \"Failed to load sessions. Unknown error.\";\n            if (typeof response.error === 'string' && response.error) {\n              displayError = response.error;\n            } else if (response.error && typeof (response.error as any).message === 'string') {\n              displayError = (response.error as any).message;\n            }\n            setError(displayError);\n            setSessions([]);\n          }\n        } else {\n            setError(\"Received an unexpected response structure from the server.\");\n            setSessions([]);\n        }\n        setLoadingSessions(false);\n      }\n\n      loadSessions().catch(err => {\n          let displayError = \"An unexpected error occurred while fetching sessions.\";\n          if (err instanceof Error) {\n            displayError = err.message;\n          }\n          setError(displayError);\n          setSessions([]);\n          setLoadingSessions(false);\n        });\n    } else if (authLoading) {\n      setLoadingSessions(true); \n    }\n  }, [user, authLoading, router]);\n\n  if (authLoading || (!user && !authLoading) /* Wait for redirect or auth load */) {\n    return (\n      <main className=\"flex min-h-screen flex-col items-center justify-center p-4\">\n        <div className=\"flex flex-col items-center space-y-2\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n          <p className=\"text-muted-foreground\">Loading dashboard...</p>\n        </div>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"flex flex-1 flex-col p-4 sm:p-6 md:p-8 bg-muted/20\">\n      <div className=\"w-full max-w-6xl mx-auto space-y-8\">\n        <header className=\"flex flex-col sm:flex-row justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-primary\">Your Dashboard</h1>\n            <p className=\"text-lg text-muted-foreground\">Track your Stroop Test Progress</p>\n          </div>\n          <Button asChild variant=\"default\" className=\"mt-4 sm:mt-0 shadow-md\">\n            <Link href=\"/\">Play New Game</Link>\n          </Button>\n        </header>\n\n        {loadingSessions && (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader><Skeleton className=\"h-8 w-1/3 rounded-md\" /></CardHeader>\n              <CardContent><Skeleton className=\"h-40 w-full rounded-md\" /></CardContent>\n            </Card>\n             <Card>\n              <CardHeader><Skeleton className=\"h-8 w-1/3 rounded-md\" /></CardHeader>\n              <CardContent><Skeleton className=\"h-60 w-full rounded-md\" /></CardContent>\n            </Card>\n           </div>\n        )}\n\n        {!loadingSessions && error && (\n          <Card className=\"border-destructive bg-destructive/10\">\n            <CardHeader>\n              <CardTitle className=\"text-destructive\">Error Loading Data</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-destructive-foreground\">Details: {error}</p>\n              <Button onClick={() => router.refresh()} variant=\"outline\" className=\"mt-4\">Try Reloading Page</Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {!loadingSessions && !error && sessions.length === 0 && (\n          <Card className=\"text-center py-12\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl\">No Data Yet!</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground mb-4\">\n                You haven&apos;t completed any Stroop Test sessions.\n                <br />\n                Play a game to see your results populate here.\n              </p>\n              <Button asChild size=\"lg\" className=\"mt-4\">\n                <Link href=\"/\">Start Your First Stroop Test</Link>\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {!loadingSessions && !error && sessions.length > 0 && (\n          <div className=\"grid gap-6 md:grid-cols-1 lg:grid-cols-1\"> {/* Changed grid to single column for better flow */}\n            <ProgressChart sessions={sessions} />\n            <ScoreTable sessions={sessions} />\n          </div>\n        )}\n      </div>\n      <footer className=\"mt-12 text-center text-sm text-muted-foreground py-4 border-t\">\n        <p>&copy; {new Date().getFullYear()} StroopTest Challenge. All rights reserved.</p>\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AAZA;;;;;;;;;;;;AAee,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA0B,EAAE;IACnE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,eAAe,CAAC,MAAM;YACzB,MAAM,cAAc,6EAAoF;YACxG,OAAO,IAAI,CAAC,CAAC,gBAAgB,EAAE,mBAAmB,cAAc;QAClE,OAAO,IAAI,QAAQ,KAAK,GAAG,EAAE;YAC3B,mBAAmB;YACnB,SAAS;YAET,eAAe;gBACb,MAAM,WAAW,MAAM,CAAA,GAAA,4IAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK,GAAG;gBACjD,IAAI,YAAY,OAAO,aAAa,YAAY,aAAa,UAAU;oBACrE,IAAI,SAAS,OAAO,IAAI,SAAS,IAAI,EAAE;wBACrC,YAAY,SAAS,IAAI;wBACzB,SAAS;oBACX,OAAO;wBACL,IAAI,eAAe;wBACnB,IAAI,OAAO,SAAS,KAAK,KAAK,YAAY,SAAS,KAAK,EAAE;4BACxD,eAAe,SAAS,KAAK;wBAC/B,OAAO,IAAI,SAAS,KAAK,IAAI,OAAO,AAAC,SAAS,KAAK,CAAS,OAAO,KAAK,UAAU;4BAChF,eAAe,AAAC,SAAS,KAAK,CAAS,OAAO;wBAChD;wBACA,SAAS;wBACT,YAAY,EAAE;oBAChB;gBACF,OAAO;oBACH,SAAS;oBACT,YAAY,EAAE;gBAClB;gBACA,mBAAmB;YACrB;YAEA,eAAe,KAAK,CAAC,CAAA;gBACjB,IAAI,eAAe;gBACnB,IAAI,eAAe,OAAO;oBACxB,eAAe,IAAI,OAAO;gBAC5B;gBACA,SAAS;gBACT,YAAY,EAAE;gBACd,mBAAmB;YACrB;QACJ,OAAO,IAAI,aAAa;YACtB,mBAAmB;QACrB;IACF,GAAG;QAAC;QAAM;QAAa;KAAO;IAE9B,IAAI,eAAgB,CAAC,QAAQ,CAAC,aAAmD;QAC/E,qBACE,8OAAC;YAAK,WAAU;sBACd,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,WAAU;;0CAChB,8OAAC;;kDACC,8OAAC;wCAAG,WAAU;kDAA8C;;;;;;kDAC5D,8OAAC;wCAAE,WAAU;kDAAgC;;;;;;;;;;;;0CAE/C,8OAAC,yJAAA,CAAA,SAAM;gCAAC,OAAO;gCAAC,SAAQ;gCAAU,WAAU;0CAC1C,cAAA,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;8CAAI;;;;;;;;;;;;;;;;;oBAIlB,iCACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,uJAAA,CAAA,OAAI;;kDACH,8OAAC,uJAAA,CAAA,aAAU;kDAAC,cAAA,8OAAC;4CAAS,WAAU;;;;;;;;;;;kDAChC,8OAAC,uJAAA,CAAA,cAAW;kDAAC,cAAA,8OAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;0CAElC,8OAAC,uJAAA,CAAA,OAAI;;kDACJ,8OAAC,uJAAA,CAAA,aAAU;kDAAC,cAAA,8OAAC;4CAAS,WAAU;;;;;;;;;;;kDAChC,8OAAC,uJAAA,CAAA,cAAW;kDAAC,cAAA,8OAAC;4CAAS,WAAU;;;;;;;;;;;;;;;;;;;;;;;oBAKtC,CAAC,mBAAmB,uBACnB,8OAAC,uJAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,8OAAC,uJAAA,CAAA,aAAU;0CACT,cAAA,8OAAC,uJAAA,CAAA,YAAS;oCAAC,WAAU;8CAAmB;;;;;;;;;;;0CAE1C,8OAAC,uJAAA,CAAA,cAAW;;kDACV,8OAAC;wCAAE,WAAU;;4CAA8B;4CAAU;;;;;;;kDACrD,8OAAC,yJAAA,CAAA,SAAM;wCAAC,SAAS,IAAM,OAAO,OAAO;wCAAI,SAAQ;wCAAU,WAAU;kDAAO;;;;;;;;;;;;;;;;;;oBAKjF,CAAC,mBAAmB,CAAC,SAAS,SAAS,MAAM,KAAK,mBACjD,8OAAC,uJAAA,CAAA,OAAI;wBAAC,WAAU;;0CACd,8OAAC,uJAAA,CAAA,aAAU;0CACT,cAAA,8OAAC,uJAAA,CAAA,YAAS;oCAAC,WAAU;8CAAW;;;;;;;;;;;0CAElC,8OAAC,uJAAA,CAAA,cAAW;;kDACV,8OAAC;wCAAE,WAAU;;4CAA6B;0DAExC,8OAAC;;;;;4CAAK;;;;;;;kDAGR,8OAAC,yJAAA,CAAA,SAAM;wCAAC,OAAO;wCAAC,MAAK;wCAAK,WAAU;kDAClC,cAAA,8OAAC,4JAAA,CAAA,UAAI;4CAAC,MAAK;sDAAI;;;;;;;;;;;;;;;;;;;;;;;oBAMtB,CAAC,mBAAmB,CAAC,SAAS,SAAS,MAAM,GAAG,mBAC/C,8OAAC;wBAAI,WAAU;;4BAA2C;0CACxD,8OAAC,2KAAA,CAAA,UAAa;gCAAC,UAAU;;;;;;0CACzB,8OAAC,wKAAA,CAAA,UAAU;gCAAC,UAAU;;;;;;;;;;;;;;;;;;0BAI5B,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;;wBAAE;wBAAQ,IAAI,OAAO,WAAW;wBAAG;;;;;;;;;;;;;;;;;;AAI5C","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8JAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/button.tsx"],"sourcesContent":["\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/lib/firebase/firestore-service.ts"],"sourcesContent":["\n'use server';\n\nimport { db } from '@/lib/firebase/config';\nimport type { User } from 'firebase/auth';\nimport {\n  collection,\n  addDoc,\n  query,\n  where,\n  orderBy,\n  getDocs,\n  Timestamp,\n  DocumentData,\n} from 'firebase/firestore';\n\nexport interface RoundResultData {\n  roundId: string;\n  title: string;\n  score: number;\n  trials: number;\n  averageResponseTimeSeconds: number;\n}\n\nexport interface StroopSessionData {\n  userId: string;\n  timestamp: Timestamp | Date; // Will be Date from client, Timestamp in Firestore\n  // Dynamically added round data e.g. round1Score, round1Trials etc.\n  [key: string]: any;\n}\n\nexport interface FetchedStroopSession extends DocumentData {\n  id: string;\n  userId: string;\n  timestamp: Timestamp; // Firestore Timestamps are fetched as such\n  // Allows for any additional keys, which will include dynamic round data\n  // e.g., round1Id, round1Score, round2Id, round2Score, etc.\n  [key: string]: any;\n}\n\nexport async function saveStroopSession(\n  userId: string,\n  sessionData: Omit<StroopSessionData, 'userId' | 'timestamp'> & { timestamp: Date }\n): Promise<{ success: boolean; error?: any; sessionId?: string }> {\n  if (!userId) {\n    console.error('[firestore-service] User ID is required to save session.');\n    return { success: false, error: 'User ID is required.' };\n  }\n  try {\n    const sessionToSave: StroopSessionData = {\n      ...sessionData,\n      userId, // Ensure userId is part of the document\n    };\n    // Firestore will automatically convert the Date object in sessionData.timestamp to a Firestore Timestamp\n    const docRef = await addDoc(collection(db, 'users', userId, 'stroopSessions'), sessionToSave);\n    console.log(`[firestore-service] Session saved successfully for userId: ${userId}, sessionId: ${docRef.id}`);\n    return { success: true, sessionId: docRef.id };\n  } catch (error: any) {\n    console.error('[firestore-service] Error saving Stroop session for userId:', userId, 'Error:', error);\n    // Construct a plain, serializable error object for the client\n    const clientError: { message: string; code?: string } = {\n      message: typeof error.message === 'string' ? error.message : 'Failed to save session.',\n      code: typeof error.code === 'string' ? error.code : 'UNKNOWN_SAVE_ERROR',\n    };\n    return { success: false, error: clientError };\n  }\n}\n\nexport async function getUserStroopSessions(\n  userId: string\n): Promise<{ success: boolean; data?: FetchedStroopSession[]; error?: string }> { // Error is now a string\n  console.log('[firestore-service] Attempting to fetch sessions for userId:', userId);\n  if (!userId) {\n    console.error('[firestore-service] User ID is required to fetch sessions.');\n     return { success: false, error: 'User ID is required.' };\n  }\n  try {\n    const sessionsColRef = collection(db, 'users', userId, 'stroopSessions');\n    const q = query(sessionsColRef, orderBy('timestamp', 'desc'));\n    console.log('[firestore-service] Executing query for path:', `users/${userId}/stroopSessions with orderBy timestamp desc`);\n    \n    const querySnapshot = await getDocs(q);\n    console.log(`[firestore-service] Query snapshot received. Empty: ${querySnapshot.empty}. Size: ${querySnapshot.size}`);\n    \n    const sessions: FetchedStroopSession[] = [];\n    querySnapshot.forEach((doc) => {\n      sessions.push({ id: doc.id, ...doc.data() } as FetchedStroopSession);\n    });\n    console.log(`[firestore-service] Fetched ${sessions.length} sessions for userId: ${userId}`);\n    return { success: true, data: sessions };\n  } catch (error: any) {\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected error occurred while fetching data.';\n    const errorCode = typeof error.code === 'string' ? error.code : 'UNKNOWN_FETCH_ERROR';\n    \n    // Log the full error on the server for debugging, trying to get all enumerable properties\n    console.error(\n      `[firestore-service] Error fetching user Stroop sessions for userId: ${userId}. Code: ${errorCode}, Message: ${errorMessage}`,\n      { originalErrorObjectDetails: JSON.stringify(error, Object.getOwnPropertyNames(error)) }\n    );\n    \n    // Return just the error message string to ensure it gets to the client\n    return { success: false, error: errorMessage };\n  }\n}\n\n"],"names":[],"mappings":";;;;;;IAwCsB;IA4BA","debugId":null}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/stroop-test-game.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useCallback, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { RefreshCw, ArrowRight } from 'lucide-react';\nimport { useAuth } from '@/contexts/auth-context';\nimport { saveStroopSession, type RoundResultData } from '@/lib/firebase/firestore-service';\nimport { useToast } from \"@/hooks/use-toast\";\n\n\ninterface ColorOption {\n  name: string;\n  value: string; // Hex color value\n}\n\nconst COLORS_CONFIG: ColorOption[] = [\n  { name: \"RED\", value: \"#EF4444\" },\n  { name: \"GREEN\", value: \"#22C55E\" },\n  { name: \"BLUE\", value: \"#3B82F6\" },\n  { name: \"YELLOW\", value: \"#EAB308\" },\n  { name: \"PURPLE\", value: \"#A855F7\" },\n  { name: \"ORANGE\", value: \"#F97316\" },\n];\n\n// Read round duration from environment variable, fallback to 120\nconst envRoundDuration = process.env.NEXT_PUBLIC_STROOP_ROUND_DURATION_SECONDS;\nconst parsedEnvRoundDuration = envRoundDuration ? parseInt(envRoundDuration, 10) : NaN;\nconst ROUND_DURATION = !isNaN(parsedEnvRoundDuration) && parsedEnvRoundDuration > 0 ? parsedEnvRoundDuration : 120;\n\n\ninterface RoundConfig {\n  id: string;\n  title: string;\n  instruction: string;\n  rule: 'word' | 'color';\n}\n\nconst ROUNDS_CONFIG: RoundConfig[] = [\n  {\n    id: 'wordMatch',\n    title: 'Round 1: Match Word Meaning',\n    instruction: 'Click the button corresponding to the MEANING of the word displayed, ignoring the font color. For example, if you see the word \"RED\" written in blue font, click the \"RED\" button.',\n    rule: 'word',\n  },\n  {\n    id: 'colorMatch',\n    title: 'Round 2: Match Font Color',\n    instruction: 'Click the button corresponding to the FONT COLOR of the word, ignoring what the word says. For example, if you see the word \"RED\" written in blue font, click the \"BLUE\" button.',\n    rule: 'color',\n  },\n];\n\n// Utility function to get a contrasting text color\nfunction getContrastingTextColor(hexColor: string): string {\n  if (!hexColor.startsWith(\"#\") || hexColor.length !== 7) {\n    return 'white';\n  }\n  const r = parseInt(hexColor.slice(1, 3), 16);\n  const g = parseInt(hexColor.slice(3, 5), 16);\n  const b = parseInt(hexColor.slice(5, 7), 16);\n  const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n  return brightness > 150 ? '#000000' : '#FFFFFF';\n}\n\n// Utility function to shuffle an array\nfunction shuffleArray<T>(array: T[]): T[] {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\n\nexport default function StroopTestGame() {\n  const { user } = useAuth();\n  const { toast } = useToast();\n\n  const [currentWordText, setCurrentWordText] = useState<string>(\"\");\n  const [currentDisplayColor, setCurrentDisplayColor] = useState<string>(\"\");\n  const [correctColorName, setCorrectColorName] = useState<string>(\"\");\n\n  const [score, setScore] = useState<number>(0);\n  const [trialCount, setTrialCount] = useState<number>(0);\n  const [totalResponseTime, setTotalResponseTime] = useState<number>(0);\n  const [averageResponseTime, setAverageResponseTime] = useState<number>(0);\n\n  const [currentTrialStartTime, setCurrentTrialStartTime] = useState<number | null>(null);\n  \n  const [feedbackMessage, setFeedbackMessage] = useState<string>(\"\");\n  const [feedbackType, setFeedbackType] = useState<'correct' | 'incorrect' | ''>('');\n  const [feedbackVisible, setFeedbackVisible] = useState<boolean>(false);\n\n  const [buttonColors, setButtonColors] = useState<ColorOption[]>([]);\n\n  const [gamePhase, setGamePhase] = useState<'initial' | 'instructions' | 'playing' | 'roundSummary'>('initial');\n  const [currentRoundIndex, setCurrentRoundIndex] = useState<number>(0);\n  const [timeLeft, setTimeLeft] = useState<number>(ROUND_DURATION);\n\n  const [completedRoundsData, setCompletedRoundsData] = useState<RoundResultData[]>([]);\n  const [hasSavedCurrentSession, setHasSavedCurrentSession] = useState<boolean>(false);\n\n\n  const gameTimerRef = useRef<NodeJS.Timeout | null>(null);\n  const feedbackTimerRef = useRef<NodeJS.Timeout | null>(null);\n\n  useEffect(() => {\n    // Cleanup timers on component unmount\n    return () => {\n      if (gameTimerRef.current) clearInterval(gameTimerRef.current);\n      if (feedbackTimerRef.current) clearTimeout(feedbackTimerRef.current);\n    };\n  }, []);\n\n  const endCurrentRound = useCallback(() => {\n    const currentRoundConfig = ROUNDS_CONFIG[currentRoundIndex];\n    const roundResult: RoundResultData = {\n      roundId: currentRoundConfig.id,\n      title: currentRoundConfig.title,\n      score: score,\n      trials: trialCount,\n      averageResponseTimeSeconds: parseFloat(averageResponseTime.toFixed(2)),\n    };\n    setCompletedRoundsData(prev => [...prev, roundResult]);\n    setGamePhase('roundSummary');\n    if (gameTimerRef.current) clearInterval(gameTimerRef.current);\n    if (feedbackTimerRef.current) clearTimeout(feedbackTimerRef.current);\n    setFeedbackVisible(false);\n  }, [currentRoundIndex, score, trialCount, averageResponseTime]);\n\n  const nextTrial = useCallback(() => {\n    if (gamePhase !== 'playing') {\n      setFeedbackVisible(false);\n      return;\n    }\n\n    setFeedbackVisible(false);\n    setFeedbackMessage(\"\");\n\n    let wordIndex = Math.floor(Math.random() * COLORS_CONFIG.length);\n    let colorIndex = Math.floor(Math.random() * COLORS_CONFIG.length);\n    \n    const currentRule = ROUNDS_CONFIG[currentRoundIndex].rule;\n    if (currentRule === 'color') {\n      // Ensure word meaning and font color are different for the 'colorMatch' round to increase difficulty\n      while (wordIndex === colorIndex) { \n        colorIndex = Math.floor(Math.random() * COLORS_CONFIG.length);\n      }\n    }\n\n    setCurrentWordText(COLORS_CONFIG[wordIndex].name);\n    setCurrentDisplayColor(COLORS_CONFIG[colorIndex].value);\n    \n    const determinedCorrectColorName = (currentRule === 'word')\n      ? COLORS_CONFIG[wordIndex].name\n      : COLORS_CONFIG[colorIndex].name;\n    setCorrectColorName(determinedCorrectColorName);\n\n    setButtonColors(shuffleArray(COLORS_CONFIG));\n    setCurrentTrialStartTime(Date.now());\n  }, [gamePhase, currentRoundIndex]);\n\n\n  const handleStartGame = useCallback(() => {\n    setCurrentRoundIndex(0);\n    setCompletedRoundsData([]);\n    setHasSavedCurrentSession(false);\n    setGamePhase('instructions');\n  }, []);\n\n  const handleBeginRound = useCallback(() => {\n    setScore(0);\n    setTrialCount(0);\n    setTotalResponseTime(0);\n    setAverageResponseTime(0);\n    setFeedbackVisible(false);\n    setFeedbackMessage(\"\");\n    \n    setGamePhase('playing');\n    setTimeLeft(ROUND_DURATION);\n    \n    if (gameTimerRef.current) clearInterval(gameTimerRef.current);\n    gameTimerRef.current = setInterval(() => {\n      setTimeLeft(prevTime => {\n        if (prevTime <= 1) {\n          // clearInterval(gameTimerRef.current!); // Already cleared in endCurrentRound or unmount\n          return 0; \n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n  }, []);\n\n  const handleNextRound = useCallback(() => {\n    setCurrentRoundIndex(prev => prev + 1);\n    setGamePhase('instructions');\n  }, []);\n\n  const handleRestartGame = useCallback(() => {\n    setGamePhase('initial');\n    setCompletedRoundsData([]);\n    setHasSavedCurrentSession(false);\n  }, []);\n\n\n  useEffect(() => {\n    // This effect calls nextTrial only when gamePhase is 'playing' and it's effectively the start of the round for actual gameplay\n    if (gamePhase === 'playing' && timeLeft === ROUND_DURATION && score === 0 && trialCount === 0) {\n      nextTrial();\n    }\n  }, [gamePhase, timeLeft, score, trialCount, nextTrial]);\n\n  useEffect(() => {\n    if (gamePhase === 'playing' && timeLeft <= 0) {\n      endCurrentRound();\n    }\n  }, [timeLeft, gamePhase, endCurrentRound]);\n\n  useEffect(() => {\n    if (trialCount > 0) {\n      setAverageResponseTime(totalResponseTime / trialCount / 1000);\n    } else {\n      setAverageResponseTime(0);\n    }\n  }, [totalResponseTime, trialCount]);\n\n  useEffect(() => {\n    if (feedbackTimerRef.current) clearTimeout(feedbackTimerRef.current);\n    if (feedbackVisible && gamePhase === 'playing') {\n      feedbackTimerRef.current = setTimeout(() => {\n        if (gamePhase === 'playing') { // Ensure still playing before calling nextTrial\n           nextTrial();\n        } else {\n           setFeedbackVisible(false); // Clear feedback if phase changed (e.g. round ended)\n        }\n      }, 1500); // Show feedback for 1.5 seconds\n    }\n    // Cleanup function for the timeout\n    return () => {\n      if (feedbackTimerRef.current) clearTimeout(feedbackTimerRef.current);\n    };\n  }, [feedbackVisible, gamePhase, nextTrial]);\n\n  // Effect to save game session data\n   useEffect(() => {\n    if (\n      gamePhase === 'roundSummary' &&\n      currentRoundIndex === ROUNDS_CONFIG.length - 1 && // On summary of the last round\n      user &&\n      !hasSavedCurrentSession &&\n      completedRoundsData.length === ROUNDS_CONFIG.length // Ensure all data is collected\n    ) {\n      const sessionDataToSave: any = {\n        timestamp: new Date(), // Firestore will convert this to Timestamp\n      };\n      completedRoundsData.forEach((result, index) => {\n        const roundNum = index + 1; // Assuming rounds are 1-indexed for keys\n        sessionDataToSave[`round\\${roundNum}Id`] = result.roundId;\n        sessionDataToSave[`round\\${roundNum}Title`] = result.title;\n        sessionDataToSave[`round\\${roundNum}Score`] = result.score;\n        sessionDataToSave[`round\\${roundNum}Trials`] = result.trials;\n        sessionDataToSave[`round\\${roundNum}AverageResponseTimeSeconds`] = result.averageResponseTimeSeconds;\n      });\n\n      saveStroopSession(user.uid, sessionDataToSave)\n        .then(response => {\n          if (response.success) {\n            toast({ title: \"Game Saved!\", description: \"Your results have been saved to your dashboard.\" });\n            setHasSavedCurrentSession(true);\n          } else {\n            toast({ title: \"Save Failed\", description: \"Could not save your game results. Please try again.\", variant: \"destructive\" });\n            console.error(\"Failed to save session:\", response.error);\n          }\n        })\n        .catch(error => {\n          toast({ title: \"Save Error\", description: \"An unexpected error occurred while saving.\", variant: \"destructive\" });\n          console.error(\"Error in saveStroopSession promise:\", error);\n        });\n    }\n  }, [gamePhase, currentRoundIndex, user, completedRoundsData, hasSavedCurrentSession, toast]);\n\n\n  const handleColorSelection = (selectedColorName: string) => {\n    if (gamePhase !== 'playing' || currentTrialStartTime === null || feedbackVisible) return;\n\n    const responseTime = Date.now() - currentTrialStartTime;\n    setTotalResponseTime(prev => prev + responseTime);\n    setTrialCount(prev => prev + 1);\n    setFeedbackVisible(true);\n\n    if (selectedColorName === correctColorName) {\n      setScore(prev => prev + 1);\n      setFeedbackMessage(\"Correct!\");\n      setFeedbackType('correct');\n    } else {\n      setFeedbackMessage(`Incorrect! The answer was \\${correctColorName}.`);\n      setFeedbackType('incorrect');\n    }\n  };\n\n  if (gamePhase === 'initial') {\n    return (\n      <div className=\"flex flex-col items-center space-y-6 p-4 text-center\">\n        <h1 className=\"text-4xl font-bold text-primary\">Stroop Test Challenge</h1>\n        <p className=\"text-lg max-w-md text-muted-foreground\">\n          This test measures your cognitive flexibility and processing speed.\n          You will go through two rounds with different rules.\n        </p>\n        <Button onClick={handleStartGame} size=\"lg\" className=\"px-8 py-6 text-xl shadow-lg hover:shadow-primary/50 transition-shadow\">\n          Start Game <ArrowRight className=\"ml-2 h-6 w-6\" />\n        </Button>\n      </div>\n    );\n  }\n\n  if (gamePhase === 'instructions') {\n    const roundConfig = ROUNDS_CONFIG[currentRoundIndex];\n    return (\n      <Card className=\"w-full max-w-lg shadow-2xl rounded-xl\">\n        <CardHeader>\n          <CardTitle className=\"text-3xl font-extrabold text-primary tracking-tight text-center\">{roundConfig.title}</CardTitle>\n        </CardHeader>\n        <CardContent className=\"text-center space-y-4 py-6\">\n          <p className=\"text-lg text-muted-foreground whitespace-pre-line\">{roundConfig.instruction}</p>\n          <p className=\"text-md font-semibold\">You will have {ROUND_DURATION} seconds.</p>\n        </CardContent>\n        <CardFooter className=\"flex justify-center pt-4 pb-6\">\n          <Button onClick={handleBeginRound} size=\"lg\" className=\"px-8 py-4 text-lg shadow-md hover:shadow-primary/40 transition-shadow\">\n            Begin Round <ArrowRight className=\"ml-2 h-5 w-5\" />\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  if (gamePhase === 'roundSummary') {\n    // Find the data for the round that just finished.\n    // currentRoundIndex is the index of the round that just ended.\n    // completedRoundsData should now contain this round's data at the end.\n    const justCompletedRoundData = completedRoundsData[currentRoundIndex]; \n    const roundConfig = ROUNDS_CONFIG[currentRoundIndex];\n    const isLastRound = currentRoundIndex === ROUNDS_CONFIG.length - 1;\n    \n    if (!justCompletedRoundData) {\n        // Should not happen if logic is correct, but a fallback\n        return (\n            <Card className=\"w-full max-w-lg shadow-2xl rounded-xl\">\n                <CardHeader><CardTitle>Loading Summary...</CardTitle></CardHeader>\n                <CardContent><p>Preparing your results...</p></CardContent>\n            </Card>\n        );\n    }\n\n    return (\n      <Card className=\"w-full max-w-lg shadow-2xl rounded-xl\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-3xl font-extrabold text-primary tracking-tight text-center\">\n            {roundConfig.title} Complete!\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"flex flex-col items-center space-y-6 py-8 text-center\">\n          <p className=\"text-xl\">Your score for this round: <span className=\"font-bold text-primary text-2xl\">{justCompletedRoundData.score}</span></p>\n          <p className=\"text-lg\">Total trials: <span className=\"font-bold\">{justCompletedRoundData.trials}</span></p>\n          <p className=\"text-lg\">Average response time: <span className=\"font-bold text-accent\">{justCompletedRoundData.averageResponseTimeSeconds.toFixed(2)}s</span></p>\n        </CardContent>\n        <CardFooter className=\"flex flex-col sm:flex-row justify-center space-y-3 sm:space-y-0 sm:space-x-4 pt-4 pb-6 bg-muted/30 rounded-b-xl\">\n          {!isLastRound && (\n            <Button onClick={handleNextRound} size=\"lg\" className=\"px-8 py-4 text-lg shadow-md hover:shadow-primary/40 transition-shadow\">\n              Next Round <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Button>\n          )}\n          <Button onClick={handleRestartGame} variant={isLastRound ? \"default\" : \"outline\"} size=\"lg\" className=\"px-8 py-4 text-lg shadow-md hover:shadow-primary/40 transition-shadow\">\n            {isLastRound ? \"Play Again\" : \"Restart Game\"}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  // gamePhase === 'playing'\n  const currentRoundConfig = ROUNDS_CONFIG[currentRoundIndex];\n  return (\n    <Card className=\"w-full max-w-lg shadow-2xl rounded-xl\">\n      <CardHeader className=\"pb-4\">\n        <div className=\"flex justify-between items-start\">\n          <CardTitle className=\"text-2xl sm:text-3xl font-extrabold text-primary tracking-tight\">{currentRoundConfig.title}</CardTitle>\n          <div className=\"text-right space-y-1\">\n             <p className=\"text-xl font-semibold text-accent\">Time: {timeLeft}s</p>\n             <Button variant=\"ghost\" size=\"icon\" onClick={handleRestartGame} aria-label=\"Restart Game\" className=\"h-8 w-8\">\n                <RefreshCw className=\"h-5 w-5\" />\n             </Button>\n          </div>\n        </div>\n        <CardDescription className=\"text-center pt-2 !text-base\">\n          {currentRoundConfig.rule === 'word' ? 'Select the MEANING of the word.' : 'Select the FONT COLOR of the word.'}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"flex flex-col items-center space-y-8 py-8\">\n        <div\n          className=\"text-6xl sm:text-7xl font-bold p-4 rounded-lg min-h-[100px] flex items-center justify-center select-none\"\n          style={{ color: currentDisplayColor }}\n          aria-live=\"polite\"\n          data-ai-hint=\"abstract pattern\"\n        >\n          {currentWordText}\n        </div>\n\n        <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3 w-full px-4\">\n          {buttonColors.map((colorOpt) => (\n            <Button\n              key={colorOpt.name}\n              onClick={() => handleColorSelection(colorOpt.name)}\n              className=\"text-base sm:text-lg h-14 sm:h-16 font-medium shadow-md hover:shadow-lg transition-shadow duration-200\"\n              style={{ \n                backgroundColor: colorOpt.value, \n                color: getContrastingTextColor(colorOpt.value),\n                borderColor: getContrastingTextColor(colorOpt.value) === '#FFFFFF' ? 'rgba(0,0,0,0.2)' : 'rgba(255,255,255,0.3)',\n                borderWidth: '1px' \n              }}\n              aria-label={`Select color \\${colorOpt.name}`}\n              disabled={feedbackVisible}\n            >\n              {colorOpt.name}\n            </Button>\n          ))}\n        </div>\n        \n        {feedbackVisible && (\n          <div className={`\n            text-lg sm:text-xl font-semibold p-3 rounded-md min-h-[60px] flex items-center justify-center text-center\n            transition-opacity duration-300 ease-in-out\n            \\${feedbackVisible ? 'opacity-100' : 'opacity-0'}\n            \\${feedbackType === 'correct' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'}\n          `}\n            aria-live=\"assertive\">\n            {feedbackMessage}\n          </div>\n        )}\n        {!feedbackVisible && <div className=\"min-h-[60px]\"></div>} {/* Placeholder for layout stability */}\n\n      </CardContent>\n      <CardFooter className=\"flex flex-col sm:flex-row justify-around text-base pt-4 pb-6 bg-muted/30 rounded-b-xl\">\n        <p className=\"font-medium mb-2 sm:mb-0\">Score: <span className=\"font-bold text-primary\">{score}</span></p>\n        <p className=\"font-medium mb-2 sm:mb-0\">Trials: <span className=\"font-bold\">{trialCount}</span></p>\n        <p className=\"font-medium\">Avg Time: <span className=\"font-bold text-accent\">{averageResponseTime.toFixed(2)}s</span></p>\n      </CardFooter>\n    </Card>\n  );\n}\n\n    \n\n    \n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AARA;;;;;;;;;AAgBA,MAAM,gBAA+B;IACnC;QAAE,MAAM;QAAO,OAAO;IAAU;IAChC;QAAE,MAAM;QAAS,OAAO;IAAU;IAClC;QAAE,MAAM;QAAQ,OAAO;IAAU;IACjC;QAAE,MAAM;QAAU,OAAO;IAAU;IACnC;QAAE,MAAM;QAAU,OAAO;IAAU;IACnC;QAAE,MAAM;QAAU,OAAO;IAAU;CACpC;AAED,iEAAiE;AACjE,MAAM,mBAAmB,QAAQ,GAAG,CAAC,yCAAyC;AAC9E,MAAM,yBAAyB,mBAAmB,SAAS,kBAAkB,MAAM;AACnF,MAAM,iBAAiB,CAAC,MAAM,2BAA2B,yBAAyB,IAAI,yBAAyB;AAU/G,MAAM,gBAA+B;IACnC;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;IACR;IACA;QACE,IAAI;QACJ,OAAO;QACP,aAAa;QACb,MAAM;IACR;CACD;AAED,mDAAmD;AACnD,SAAS,wBAAwB,QAAgB;IAC/C,IAAI,CAAC,SAAS,UAAU,CAAC,QAAQ,SAAS,MAAM,KAAK,GAAG;QACtD,OAAO;IACT;IACA,MAAM,IAAI,SAAS,SAAS,KAAK,CAAC,GAAG,IAAI;IACzC,MAAM,IAAI,SAAS,SAAS,KAAK,CAAC,GAAG,IAAI;IACzC,MAAM,IAAI,SAAS,SAAS,KAAK,CAAC,GAAG,IAAI;IACzC,MAAM,aAAa,CAAC,IAAI,MAAM,IAAI,MAAM,IAAI,GAAG,IAAI;IACnD,OAAO,aAAa,MAAM,YAAY;AACxC;AAEA,uCAAuC;AACvC,SAAS,aAAgB,KAAU;IACjC,MAAM,WAAW;WAAI;KAAM;IAC3B,IAAK,IAAI,IAAI,SAAS,MAAM,GAAG,GAAG,IAAI,GAAG,IAAK;QAC5C,MAAM,IAAI,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,CAAC,IAAI,CAAC;QAC3C,CAAC,QAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG;YAAC,QAAQ,CAAC,EAAE;YAAE,QAAQ,CAAC,EAAE;SAAC;IACzD;IACA,OAAO;AACT;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD;IACvB,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACvE,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACrD,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACnE,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEvE,MAAM,CAAC,uBAAuB,yBAAyB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElF,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAC/D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAgC;IAC/E,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAEhE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAElE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA2D;IACpG,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IACnE,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU;IAEjD,MAAM,CAAC,qBAAqB,uBAAuB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAqB,EAAE;IACpF,MAAM,CAAC,wBAAwB,0BAA0B,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAW;IAG9E,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IACnD,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAyB;IAEvD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,sCAAsC;QACtC,OAAO;YACL,IAAI,aAAa,OAAO,EAAE,cAAc,aAAa,OAAO;YAC5D,IAAI,iBAAiB,OAAO,EAAE,aAAa,iBAAiB,OAAO;QACrE;IACF,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,MAAM,qBAAqB,aAAa,CAAC,kBAAkB;QAC3D,MAAM,cAA+B;YACnC,SAAS,mBAAmB,EAAE;YAC9B,OAAO,mBAAmB,KAAK;YAC/B,OAAO;YACP,QAAQ;YACR,4BAA4B,WAAW,oBAAoB,OAAO,CAAC;QACrE;QACA,uBAAuB,CAAA,OAAQ;mBAAI;gBAAM;aAAY;QACrD,aAAa;QACb,IAAI,aAAa,OAAO,EAAE,cAAc,aAAa,OAAO;QAC5D,IAAI,iBAAiB,OAAO,EAAE,aAAa,iBAAiB,OAAO;QACnE,mBAAmB;IACrB,GAAG;QAAC;QAAmB;QAAO;QAAY;KAAoB;IAE9D,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC5B,IAAI,cAAc,WAAW;YAC3B,mBAAmB;YACnB;QACF;QAEA,mBAAmB;QACnB,mBAAmB;QAEnB,IAAI,YAAY,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,cAAc,MAAM;QAC/D,IAAI,aAAa,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,cAAc,MAAM;QAEhE,MAAM,cAAc,aAAa,CAAC,kBAAkB,CAAC,IAAI;QACzD,IAAI,gBAAgB,SAAS;YAC3B,qGAAqG;YACrG,MAAO,cAAc,WAAY;gBAC/B,aAAa,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,cAAc,MAAM;YAC9D;QACF;QAEA,mBAAmB,aAAa,CAAC,UAAU,CAAC,IAAI;QAChD,uBAAuB,aAAa,CAAC,WAAW,CAAC,KAAK;QAEtD,MAAM,6BAA6B,AAAC,gBAAgB,SAChD,aAAa,CAAC,UAAU,CAAC,IAAI,GAC7B,aAAa,CAAC,WAAW,CAAC,IAAI;QAClC,oBAAoB;QAEpB,gBAAgB,aAAa;QAC7B,yBAAyB,KAAK,GAAG;IACnC,GAAG;QAAC;QAAW;KAAkB;IAGjC,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,qBAAqB;QACrB,uBAAuB,EAAE;QACzB,0BAA0B;QAC1B,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,mBAAmB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACnC,SAAS;QACT,cAAc;QACd,qBAAqB;QACrB,uBAAuB;QACvB,mBAAmB;QACnB,mBAAmB;QAEnB,aAAa;QACb,YAAY;QAEZ,IAAI,aAAa,OAAO,EAAE,cAAc,aAAa,OAAO;QAC5D,aAAa,OAAO,GAAG,YAAY;YACjC,YAAY,CAAA;gBACV,IAAI,YAAY,GAAG;oBACjB,yFAAyF;oBACzF,OAAO;gBACT;gBACA,OAAO,WAAW;YACpB;QACF,GAAG;IACL,GAAG,EAAE;IAEL,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAClC,qBAAqB,CAAA,OAAQ,OAAO;QACpC,aAAa;IACf,GAAG,EAAE;IAEL,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACpC,aAAa;QACb,uBAAuB,EAAE;QACzB,0BAA0B;IAC5B,GAAG,EAAE;IAGL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,+HAA+H;QAC/H,IAAI,cAAc,aAAa,aAAa,kBAAkB,UAAU,KAAK,eAAe,GAAG;YAC7F;QACF;IACF,GAAG;QAAC;QAAW;QAAU;QAAO;QAAY;KAAU;IAEtD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc,aAAa,YAAY,GAAG;YAC5C;QACF;IACF,GAAG;QAAC;QAAU;QAAW;KAAgB;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,aAAa,GAAG;YAClB,uBAAuB,oBAAoB,aAAa;QAC1D,OAAO;YACL,uBAAuB;QACzB;IACF,GAAG;QAAC;QAAmB;KAAW;IAElC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,iBAAiB,OAAO,EAAE,aAAa,iBAAiB,OAAO;QACnE,IAAI,mBAAmB,cAAc,WAAW;YAC9C,iBAAiB,OAAO,GAAG,WAAW;gBACpC,IAAI,cAAc,WAAW;oBAC1B;gBACH,OAAO;oBACJ,mBAAmB,QAAQ,qDAAqD;gBACnF;YACF,GAAG,OAAO,gCAAgC;QAC5C;QACA,mCAAmC;QACnC,OAAO;YACL,IAAI,iBAAiB,OAAO,EAAE,aAAa,iBAAiB,OAAO;QACrE;IACF,GAAG;QAAC;QAAiB;QAAW;KAAU;IAE1C,mCAAmC;IAClC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACT,IACE,cAAc,kBACd,sBAAsB,cAAc,MAAM,GAAG,KAAK,+BAA+B;QACjF,QACA,CAAC,0BACD,oBAAoB,MAAM,KAAK,cAAc,MAAM,CAAC,+BAA+B;UACnF;YACA,MAAM,oBAAyB;gBAC7B,WAAW,IAAI;YACjB;YACA,oBAAoB,OAAO,CAAC,CAAC,QAAQ;gBACnC,MAAM,WAAW,QAAQ,GAAG,yCAAyC;gBACrE,iBAAiB,CAAC,CAAC,mBAAmB,CAAC,CAAC,GAAG,OAAO,OAAO;gBACzD,iBAAiB,CAAC,CAAC,sBAAsB,CAAC,CAAC,GAAG,OAAO,KAAK;gBAC1D,iBAAiB,CAAC,CAAC,sBAAsB,CAAC,CAAC,GAAG,OAAO,KAAK;gBAC1D,iBAAiB,CAAC,CAAC,uBAAuB,CAAC,CAAC,GAAG,OAAO,MAAM;gBAC5D,iBAAiB,CAAC,CAAC,2CAA2C,CAAC,CAAC,GAAG,OAAO,0BAA0B;YACtG;YAEA,CAAA,GAAA,qKAAA,CAAA,oBAAiB,AAAD,EAAE,KAAK,GAAG,EAAE,mBACzB,IAAI,CAAC,CAAA;gBACJ,IAAI,SAAS,OAAO,EAAE;oBACpB,MAAM;wBAAE,OAAO;wBAAe,aAAa;oBAAkD;oBAC7F,0BAA0B;gBAC5B,OAAO;oBACL,MAAM;wBAAE,OAAO;wBAAe,aAAa;wBAAuD,SAAS;oBAAc;oBACzH,QAAQ,KAAK,CAAC,2BAA2B,SAAS,KAAK;gBACzD;YACF,GACC,KAAK,CAAC,CAAA;gBACL,MAAM;oBAAE,OAAO;oBAAc,aAAa;oBAA8C,SAAS;gBAAc;gBAC/G,QAAQ,KAAK,CAAC,uCAAuC;YACvD;QACJ;IACF,GAAG;QAAC;QAAW;QAAmB;QAAM;QAAqB;QAAwB;KAAM;IAG3F,MAAM,uBAAuB,CAAC;QAC5B,IAAI,cAAc,aAAa,0BAA0B,QAAQ,iBAAiB;QAElF,MAAM,eAAe,KAAK,GAAG,KAAK;QAClC,qBAAqB,CAAA,OAAQ,OAAO;QACpC,cAAc,CAAA,OAAQ,OAAO;QAC7B,mBAAmB;QAEnB,IAAI,sBAAsB,kBAAkB;YAC1C,SAAS,CAAA,OAAQ,OAAO;YACxB,mBAAmB;YACnB,gBAAgB;QAClB,OAAO;YACL,mBAAmB,CAAC,+CAA+C,CAAC;YACpE,gBAAgB;QAClB;IACF;IAEA,IAAI,cAAc,WAAW;QAC3B,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAkC;;;;;;8BAChD,8OAAC;oBAAE,WAAU;8BAAyC;;;;;;8BAItD,8OAAC,yJAAA,CAAA,SAAM;oBAAC,SAAS;oBAAiB,MAAK;oBAAK,WAAU;;wBAAwE;sCACjH,8OAAC,kNAAA,CAAA,aAAU;4BAAC,WAAU;;;;;;;;;;;;;;;;;;IAIzC;IAEA,IAAI,cAAc,gBAAgB;QAChC,MAAM,cAAc,aAAa,CAAC,kBAAkB;QACpD,qBACE,8OAAC,uJAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,uJAAA,CAAA,aAAU;8BACT,cAAA,8OAAC,uJAAA,CAAA,YAAS;wBAAC,WAAU;kCAAmE,YAAY,KAAK;;;;;;;;;;;8BAE3G,8OAAC,uJAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC;4BAAE,WAAU;sCAAqD,YAAY,WAAW;;;;;;sCACzF,8OAAC;4BAAE,WAAU;;gCAAwB;gCAAe;gCAAe;;;;;;;;;;;;;8BAErE,8OAAC,uJAAA,CAAA,aAAU;oBAAC,WAAU;8BACpB,cAAA,8OAAC,yJAAA,CAAA,SAAM;wBAAC,SAAS;wBAAkB,MAAK;wBAAK,WAAU;;4BAAwE;0CACjH,8OAAC,kNAAA,CAAA,aAAU;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;IAK5C;IAEA,IAAI,cAAc,gBAAgB;QAChC,kDAAkD;QAClD,+DAA+D;QAC/D,uEAAuE;QACvE,MAAM,yBAAyB,mBAAmB,CAAC,kBAAkB;QACrE,MAAM,cAAc,aAAa,CAAC,kBAAkB;QACpD,MAAM,cAAc,sBAAsB,cAAc,MAAM,GAAG;QAEjE,IAAI,CAAC,wBAAwB;YACzB,wDAAwD;YACxD,qBACI,8OAAC,uJAAA,CAAA,OAAI;gBAAC,WAAU;;kCACZ,8OAAC,uJAAA,CAAA,aAAU;kCAAC,cAAA,8OAAC,uJAAA,CAAA,YAAS;sCAAC;;;;;;;;;;;kCACvB,8OAAC,uJAAA,CAAA,cAAW;kCAAC,cAAA,8OAAC;sCAAE;;;;;;;;;;;;;;;;;QAG5B;QAEA,qBACE,8OAAC,uJAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,uJAAA,CAAA,aAAU;oBAAC,WAAU;8BACpB,cAAA,8OAAC,uJAAA,CAAA,YAAS;wBAAC,WAAU;;4BAClB,YAAY,KAAK;4BAAC;;;;;;;;;;;;8BAGvB,8OAAC,uJAAA,CAAA,cAAW;oBAAC,WAAU;;sCACrB,8OAAC;4BAAE,WAAU;;gCAAU;8CAA2B,8OAAC;oCAAK,WAAU;8CAAmC,uBAAuB,KAAK;;;;;;;;;;;;sCACjI,8OAAC;4BAAE,WAAU;;gCAAU;8CAAc,8OAAC;oCAAK,WAAU;8CAAa,uBAAuB,MAAM;;;;;;;;;;;;sCAC/F,8OAAC;4BAAE,WAAU;;gCAAU;8CAAuB,8OAAC;oCAAK,WAAU;;wCAAyB,uBAAuB,0BAA0B,CAAC,OAAO,CAAC;wCAAG;;;;;;;;;;;;;;;;;;;8BAEtJ,8OAAC,uJAAA,CAAA,aAAU;oBAAC,WAAU;;wBACnB,CAAC,6BACA,8OAAC,yJAAA,CAAA,SAAM;4BAAC,SAAS;4BAAiB,MAAK;4BAAK,WAAU;;gCAAwE;8CACjH,8OAAC,kNAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;;;;;;;sCAGrC,8OAAC,yJAAA,CAAA,SAAM;4BAAC,SAAS;4BAAmB,SAAS,cAAc,YAAY;4BAAW,MAAK;4BAAK,WAAU;sCACnG,cAAc,eAAe;;;;;;;;;;;;;;;;;;IAKxC;IAEA,0BAA0B;IAC1B,MAAM,qBAAqB,aAAa,CAAC,kBAAkB;IAC3D,qBACE,8OAAC,uJAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,8OAAC,uJAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,uJAAA,CAAA,YAAS;gCAAC,WAAU;0CAAmE,mBAAmB,KAAK;;;;;;0CAChH,8OAAC;gCAAI,WAAU;;kDACZ,8OAAC;wCAAE,WAAU;;4CAAoC;4CAAO;4CAAS;;;;;;;kDACjE,8OAAC,yJAAA,CAAA,SAAM;wCAAC,SAAQ;wCAAQ,MAAK;wCAAO,SAAS;wCAAmB,cAAW;wCAAe,WAAU;kDACjG,cAAA,8OAAC,gNAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;kCAI7B,8OAAC,uJAAA,CAAA,kBAAe;wBAAC,WAAU;kCACxB,mBAAmB,IAAI,KAAK,SAAS,oCAAoC;;;;;;;;;;;;0BAG9E,8OAAC,uJAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,8OAAC;wBACC,WAAU;wBACV,OAAO;4BAAE,OAAO;wBAAoB;wBACpC,aAAU;wBACV,gBAAa;kCAEZ;;;;;;kCAGH,8OAAC;wBAAI,WAAU;kCACZ,aAAa,GAAG,CAAC,CAAC,yBACjB,8OAAC,yJAAA,CAAA,SAAM;gCAEL,SAAS,IAAM,qBAAqB,SAAS,IAAI;gCACjD,WAAU;gCACV,OAAO;oCACL,iBAAiB,SAAS,KAAK;oCAC/B,OAAO,wBAAwB,SAAS,KAAK;oCAC7C,aAAa,wBAAwB,SAAS,KAAK,MAAM,YAAY,oBAAoB;oCACzF,aAAa;gCACf;gCACA,cAAY,CAAC,8BAA8B,CAAC;gCAC5C,UAAU;0CAET,SAAS,IAAI;+BAZT,SAAS,IAAI;;;;;;;;;;oBAiBvB,iCACC,8OAAC;wBAAI,WAAW,CAAC;;;;;UAKjB,CAAC;wBACC,aAAU;kCACT;;;;;;oBAGJ,CAAC,iCAAmB,8OAAC;wBAAI,WAAU;;;;;;oBAAsB;;;;;;;0BAG5D,8OAAC,uJAAA,CAAA,aAAU;gBAAC,WAAU;;kCACpB,8OAAC;wBAAE,WAAU;;4BAA2B;0CAAO,8OAAC;gCAAK,WAAU;0CAA0B;;;;;;;;;;;;kCACzF,8OAAC;wBAAE,WAAU;;4BAA2B;0CAAQ,8OAAC;gCAAK,WAAU;0CAAa;;;;;;;;;;;;kCAC7E,8OAAC;wBAAE,WAAU;;4BAAc;0CAAU,8OAAC;gCAAK,WAAU;;oCAAyB,oBAAoB,OAAO,CAAC;oCAAG;;;;;;;;;;;;;;;;;;;;;;;;;AAIrH","debugId":null}},
    {"offset": {"line": 1025, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/avatar.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,kKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 1076, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/auth-button.tsx"],"sourcesContent":["\n\"use client\";\n\nimport Link from 'next/link';\nimport { useAuth } from '@/contexts/auth-context';\nimport { Button } from '@/components/ui/button';\nimport { LogOut, UserCircle, LayoutDashboard } from 'lucide-react';\nimport { useRouter } from 'next/navigation';\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\n\n\nexport default function AuthButton() {\n  const { user, logOut, loading } = useAuth();\n  const router = useRouter();\n\n  const handleLogout = async () => {\n    await logOut();\n    router.push('/'); \n  };\n\n  const handleDashboard = () => {\n    router.push('/dashboard');\n  };\n\n  if (loading) {\n    return <Button variant=\"outline\" disabled>Loading...</Button>;\n  }\n\n  if (user) {\n    return (\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button variant=\"ghost\" className=\"relative h-10 w-10 rounded-full\">\n            <Avatar className=\"h-10 w-10\">\n              <AvatarImage src={user.photoURL || `https://placehold.co/40x40.png?text=${user.email?.[0]?.toUpperCase() || 'U'}`} alt={user.displayName || user.email || \"User\"} data-ai-hint=\"user avatar\" />\n              <AvatarFallback>{user.email?.[0]?.toUpperCase() || \"U\"}</AvatarFallback>\n            </Avatar>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent className=\"w-56\" align=\"end\" forceMount>\n          <DropdownMenuLabel className=\"font-normal\">\n            <div className=\"flex flex-col space-y-1\">\n              <p className=\"text-sm font-medium leading-none\">\n                {user.displayName || user.email}\n              </p>\n              <p className=\"text-xs leading-none text-muted-foreground\">\n                {user.email}\n              </p>\n            </div>\n          </DropdownMenuLabel>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem onClick={handleDashboard} className=\"cursor-pointer\">\n            <LayoutDashboard className=\"mr-2 h-4 w-4\" />\n            <span>Dashboard</span>\n          </DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem onClick={handleLogout} className=\"cursor-pointer\">\n            <LogOut className=\"mr-2 h-4 w-4\" />\n            <span>Log out</span>\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    );\n  }\n\n  return (\n    <div className=\"space-x-2\">\n      <Button asChild variant=\"outline\">\n        <Link href=\"/login\">Login</Link>\n      </Button>\n      <Button asChild>\n        <Link href=\"/signup\">Sign Up</Link>\n      </Button>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AAAA;AACA;;;;;;AASA;AAfA;;;;;;;;;AAkBe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0JAAA,CAAA,UAAO,AAAD;IACxC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe;QACnB,MAAM;QACN,OAAO,IAAI,CAAC;IACd;IAEA,MAAM,kBAAkB;QACtB,OAAO,IAAI,CAAC;IACd;IAEA,IAAI,SAAS;QACX,qBAAO,8OAAC,yJAAA,CAAA,SAAM;YAAC,SAAQ;YAAU,QAAQ;sBAAC;;;;;;IAC5C;IAEA,IAAI,MAAM;QACR,qBACE,8OAAC;;8BACC,8OAAC;oBAAoB,OAAO;8BAC1B,cAAA,8OAAC,yJAAA,CAAA,SAAM;wBAAC,SAAQ;wBAAQ,WAAU;kCAChC,cAAA,8OAAC,yJAAA,CAAA,SAAM;4BAAC,WAAU;;8CAChB,8OAAC,yJAAA,CAAA,cAAW;oCAAC,KAAK,KAAK,QAAQ,IAAI,CAAC,oCAAoC,EAAE,KAAK,KAAK,EAAE,CAAC,EAAE,EAAE,iBAAiB,KAAK;oCAAE,KAAK,KAAK,WAAW,IAAI,KAAK,KAAK,IAAI;oCAAQ,gBAAa;;;;;;8CAC/K,8OAAC,yJAAA,CAAA,iBAAc;8CAAE,KAAK,KAAK,EAAE,CAAC,EAAE,EAAE,iBAAiB;;;;;;;;;;;;;;;;;;;;;;8BAIzD,8OAAC;oBAAoB,WAAU;oBAAO,OAAM;oBAAM,UAAU;;sCAC1D,8OAAC;4BAAkB,WAAU;sCAC3B,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDACV,KAAK,WAAW,IAAI,KAAK,KAAK;;;;;;kDAEjC,8OAAC;wCAAE,WAAU;kDACV,KAAK,KAAK;;;;;;;;;;;;;;;;;sCAIjB,8OAAC;;;;;sCACD,8OAAC;4BAAiB,SAAS;4BAAiB,WAAU;;8CACpD,8OAAC,4NAAA,CAAA,kBAAe;oCAAC,WAAU;;;;;;8CAC3B,8OAAC;8CAAK;;;;;;;;;;;;sCAER,8OAAC;;;;;sCACD,8OAAC;4BAAiB,SAAS;4BAAc,WAAU;;8CACjD,8OAAC,0MAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;8CAClB,8OAAC;8CAAK;;;;;;;;;;;;;;;;;;;;;;;;IAKhB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,yJAAA,CAAA,SAAM;gBAAC,OAAO;gBAAC,SAAQ;0BACtB,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;8BAAS;;;;;;;;;;;0BAEtB,8OAAC,yJAAA,CAAA,SAAM;gBAAC,OAAO;0BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;8BAAU;;;;;;;;;;;;;;;;;AAI7B","debugId":null}}]
}
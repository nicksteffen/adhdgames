{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/card.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/skeleton.tsx"],"sourcesContent":["import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;AAAA;;;AAEA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { db, getAdminDb } from '@/lib/firebase/config'; \nimport { getUserStroopSessions, saveStroopSession, type FetchedStroopSession, type StroopSessionData } from '@/lib/firebase/firestore-service';\n\n// This function is for the /firebase/hosting/src/app/actions.ts\n// It will be called by /firebase/hosting/src/app/dashboard/page.tsx or /firebase/hosting/src/app/test-page/page.tsx\nexport async function fetchUserSessions(userId: string | undefined): Promise<{\n  success: boolean;\n  data?: FetchedStroopSession[];\n  error?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] fetchUserSessions server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] fetchUserSessions: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided for fetchUserSessions.' };\n  }\n  \n  try {\n    const result = await getUserStroopSessions(userId);\n    console.log('[firebase/hosting/src/app/actions.ts] getUserStroopSessions result from service (for fetchUserSessions):', result.success, result.data?.length, result.error);\n    return result; \n  } catch (error: any) {\n    console.error('[firebase/hosting/src/app/actions.ts] Error in fetchUserSessions calling getUserStroopSessions:', error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred in fetchUserSessions.';\n    return { success: false, error: errorMessage };\n  }\n}\n\n// This function is also for /firebase/hosting/src/app/actions.ts\n// Called by /firebase/hosting/src/app/test-page/page.tsx\nexport async function fetchTestDataForUser(userId: string | undefined): Promise<{\n  success: boolean;\n  data?: FetchedStroopSession[];\n  error?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] fetchTestDataForUser server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] fetchTestDataForUser: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided for fetchTestDataForUser.' };\n  }\n  \n  try {\n    const result = await getUserStroopSessions(userId);\n    console.log('[firebase/hosting/src/app/actions.ts] getUserStroopSessions result from service (for fetchTestDataForUser):', result.success, result.data?.length, result.error);\n    return result;\n  } catch (error: any) {\n    console.error('[firebase/hosting/src/app/actions.ts] Error in fetchTestDataForUser calling getUserStroopSessions:', error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred in fetchTestDataForUser.';\n    return { success: false, error: errorMessage };\n  }\n}\n\nexport async function addMockStroopSessionForUser(userId: string | undefined): Promise<{\n  success: boolean;\n  error?: string;\n  sessionId?: string;\n}> {\n  console.log('[firebase/hosting/src/app/actions.ts] addMockStroopSessionForUser server action hit. Received userId:', userId);\n  if (!userId) {\n    console.error('[firebase/hosting/src/app/actions.ts] addMockStroopSessionForUser: No userId provided.');\n    return { success: false, error: 'User not authenticated or userId not provided.' };\n  }\n\n  const mockSessionData: Omit<StroopSessionData, 'userId' | 'timestamp'> & { timestamp: Date } = {\n    timestamp: new Date(),\n    // Round 1 Data\n    round1Id: \"wordMatch\",\n    round1Title: \"Mock Round 1: Match Word Meaning\",\n    round1Score: Math.floor(Math.random() * 18) + 7, // Score between 7-24\n    round1Trials: 25 + Math.floor(Math.random() * 6), // Trials between 25-30\n    round1AverageResponseTimeSeconds: parseFloat((Math.random() * 1.2 + 0.6).toFixed(2)), // Avg time 0.6s-1.8s\n    \n    // Round 2 Data\n    round2Id: \"colorMatch\",\n    round2Title: \"Mock Round 2: Match Font Color\",\n    round2Score: Math.floor(Math.random() * 15) + 5, // Score between 5-19\n    round2Trials: 20 + Math.floor(Math.random() * 6), // Trials between 20-25\n    round2AverageResponseTimeSeconds: parseFloat((Math.random() * 1.8 + 0.8).toFixed(2)), // Avg time 0.8s-2.6s\n    \n    overallAccuracy: Math.random(), \n    totalGameTimeSeconds: Math.floor(Math.random() * 60) + 120, \n  };\n\n  try {\n    const result = await saveStroopSession(userId, mockSessionData);\n    if (result.success) {\n      console.log(`[firebase/hosting/src/app/actions.ts] Mock session ${result.sessionId} added for user ${userId}`);\n    } else {\n      console.error(`[firebase/hosting/src/app/actions.ts] Failed to add mock session for user ${userId}:`, result.error);\n    }\n    return result;\n  } catch (error: any) {\n    console.error(`[firebase/hosting/src/app/actions.ts] Error in addMockStroopSessionForUser calling saveStroopSession for user ${userId}:`, error);\n    const errorMessage = typeof error.message === 'string' ? error.message : 'An unexpected server error occurred.';\n    return { success: false, error: errorMessage };\n  }\n}\n\nexport async function testAdminSDKConnection(): Promise<{ success: boolean; message: string; data?: any }> {\n  console.log('[actions.ts] testAdminSDKConnection server action hit.');\n  try {\n    const adminDb = await getAdminDb();\n    // Corrected collection and document IDs\n    const testDocRef = adminDb.collection('adminSdkTestCollection').doc('adminSdkTestDoc');\n    await testDocRef.get(); \n    console.log('[actions.ts] Admin SDK connection test: Successfully performed a Firestore get operation with non-reserved names.');\n    return { success: true, message: 'Admin SDK connected and performed a test Firestore read successfully.' };\n  } catch (error: any) {\n    console.error('[actions.ts] Admin SDK connection test FAILED:');\n    console.error(`  Message: ${error.message}`);\n    if (error.code) console.error(`  Code: ${error.code}`);\n    if (error.stack) console.error(`  Stack: ${error.stack}`);\n    \n    let clientErrorMessage = 'Admin SDK connection test failed.';\n    if (error.message) clientErrorMessage += ` Message: ${error.message}`;\n    if (error.code) clientErrorMessage += ` Code: ${error.code}`;\n    \n    let errorDetails = {};\n    try {\n      errorDetails = JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n    } catch (e) {\n      errorDetails = { message: \"Could not serialize full error object.\" };\n    }\n\n    return { \n      success: false, \n      message: clientErrorMessage,\n      data: { errorDetails } \n    };\n  }\n}\n"],"names":[],"mappings":";;;;;;;;IAQsB;IAwBA;IAsBA;IA8CA","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/dashboard/progress-chart.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { FetchedStroopSession } from '@/lib/firebase/firestore-service';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\nimport { format } from 'date-fns';\nimport { useMemo } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\n\ninterface ProgressChartProps {\n  sessions: FetchedStroopSession[];\n}\n\ninterface ChartRoundDetail {\n    keyPrefix: string;\n    title: string;\n    scoreDataKey: string;\n    avgTimeDataKey: string;\n}\n\nconst getAvailableRoundDetails = (sessions: FetchedStroopSession[]): ChartRoundDetail[] => {\n    const details: ChartRoundDetail[] = [];\n    if (sessions.length === 0) return details;\n\n    const firstSession = sessions[0];\n\n    if (firstSession.round1Id !== undefined && firstSession.round1Score !== undefined) {\n        details.push({\n            keyPrefix: \"round1\",\n            title: firstSession.round1Title || \"Round 1\",\n            scoreDataKey: \"round1Score\",\n            avgTimeDataKey: \"round1AverageResponseTimeSeconds\",\n        });\n    }\n    if (firstSession.round2Id !== undefined && firstSession.round2Score !== undefined) {\n         details.push({\n            keyPrefix: \"round2\",\n            title: firstSession.round2Title || \"Round 2\",\n            scoreDataKey: \"round2Score\",\n            avgTimeDataKey: \"round2AverageResponseTimeSeconds\",\n        });\n    }\n    return details;\n};\n\n\nexport default function ProgressChart({ sessions }: ProgressChartProps) {\n  const availableRoundDetails = useMemo(() => getAvailableRoundDetails(sessions), [sessions]);\n\n  const chartData = useMemo(() => {\n    return sessions\n      .map(session => {\n        const baseData: { date: string; [key: string]: any } = {\n          // Convert ISO string back to Date for formatting\n          date: session.timestamp ? format(new Date(session.timestamp), 'MMM d') : 'Unknown Date',\n        };\n\n        availableRoundDetails.forEach(rDetail => {\n            if (session[rDetail.scoreDataKey] !== undefined) {\n                baseData[rDetail.scoreDataKey] = session[rDetail.scoreDataKey];\n            }\n            if (session[rDetail.avgTimeDataKey] !== undefined) {\n                baseData[rDetail.avgTimeDataKey] = session[rDetail.avgTimeDataKey];\n            }\n        });\n        return baseData;\n      })\n      .sort((a, b) => {\n        try {\n            return new Date(a.date).getTime() - new Date(b.date).getTime();\n        } catch {\n            return 0;\n        }\n      });\n  }, [sessions, availableRoundDetails]);\n\n  if (!sessions || sessions.length < 2) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"text-xl\">Progress Over Time</CardTitle>\n                <CardDescription>Not enough data to display progress charts. Complete at least two sessions.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"h-[300px] flex items-center justify-center\">\n                <p className=\"text-muted-foreground\">Awaiting more session data...</p>\n            </CardContent>\n        </Card>\n    );\n  }\n  if (availableRoundDetails.length === 0 && sessions.length >=2) {\n     return (\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"text-xl\">Progress Over Time</CardTitle>\n                <CardDescription>Session data is present but round details could not be determined for charts.</CardDescription>\n            </CardHeader>\n             <CardContent className=\"h-[300px] flex items-center justify-center\">\n                <p className=\"text-muted-foreground\">Check session data structure.</p>\n            </CardContent>\n        </Card>\n    );\n  }\n\n  const scoreColors = ['hsl(var(--chart-1))', 'hsl(var(--chart-3))', 'hsl(var(--chart-5))'];\n  const timeColors = ['hsl(var(--chart-2))', 'hsl(var(--chart-4))', 'hsl(var(--chart-1))'];\n\n  return (\n    <div className=\"space-y-8\">\n      <Card className=\"shadow-lg rounded-lg\">\n        <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">Scores Over Time</CardTitle>\n          <CardDescription>Your scores for each round across sessions.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"date\" stroke=\"hsl(var(--muted-foreground))\" fontSize={12} tickLine={false} axisLine={false}/>\n              <YAxis stroke=\"hsl(var(--muted-foreground))\" fontSize={12} tickLine={false} axisLine={false}/>\n              <Tooltip\n                contentStyle={{ backgroundColor: 'hsl(var(--popover))', border: '1px solid hsl(var(--border))', borderRadius: 'var(--radius)' }}\n                labelStyle={{ color: 'hsl(var(--popover-foreground))', fontWeight: 'bold' }}\n              />\n              <Legend wrapperStyle={{ color: 'hsl(var(--foreground))', paddingTop: '10px' }} />\n              {availableRoundDetails.map((rDetail, index) => (\n                 <Line\n                    key={`${rDetail.keyPrefix}-score`}\n                    type=\"monotone\"\n                    dataKey={rDetail.scoreDataKey}\n                    name={`${rDetail.title} Score`}\n                    stroke={scoreColors[index % scoreColors.length]}\n                    strokeWidth={2}\n                    activeDot={{ r: 7, style: { fill: scoreColors[index % scoreColors.length], stroke: 'hsl(var(--card))' } }}\n                    dot={{ r:3, fill: scoreColors[index % scoreColors.length] }}\n                 />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-lg rounded-lg\">\n         <CardHeader>\n          <CardTitle className=\"text-xl font-semibold\">Average Response Time (s)</CardTitle>\n          <CardDescription>Your average response speed per round across sessions.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <ResponsiveContainer width=\"100%\" height={300}>\n            <LineChart data={chartData}>\n              <CartesianGrid strokeDasharray=\"3 3\" stroke=\"hsl(var(--border))\" />\n              <XAxis dataKey=\"date\" stroke=\"hsl(var(--muted-foreground))\" fontSize={12} tickLine={false} axisLine={false}/>\n              <YAxis stroke=\"hsl(var(--muted-foreground))\" fontSize={12} tickLine={false} axisLine={false} domain={['dataMin - 0.1', 'dataMax + 0.1']} allowDecimals={true} />\n              <Tooltip\n                contentStyle={{ backgroundColor: 'hsl(var(--popover))', border: '1px solid hsl(var(--border))', borderRadius: 'var(--radius)' }}\n                labelStyle={{ color: 'hsl(var(--popover-foreground))', fontWeight: 'bold' }}\n                formatter={(value: number) => typeof value === 'number' ? value.toFixed(2) + 's' : 'N/A'}\n              />\n              <Legend wrapperStyle={{ color: 'hsl(var(--foreground))', paddingTop: '10px' }} />\n              {availableRoundDetails.map((rDetail, index) => (\n                <Line\n                    key={`${rDetail.keyPrefix}-avgTime`}\n                    type=\"monotone\"\n                    dataKey={rDetail.avgTimeDataKey}\n                    name={`${rDetail.title} Avg. Time`}\n                    stroke={timeColors[index % timeColors.length]}\n                    strokeWidth={2}\n                    activeDot={{ r: 7, style: { fill: timeColors[index % timeColors.length], stroke: 'hsl(var(--card))' } }}\n                    dot={{ r:3, fill: timeColors[index % timeColors.length] }}\n                 />\n              ))}\n            </LineChart>\n          </ResponsiveContainer>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/ui/table.tsx"],"sourcesContent":["\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AACA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,0IAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 703, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/components/dashboard/score-table.tsx"],"sourcesContent":["\n\"use client\";\n\nimport type { FetchedStroopSession } from '@/lib/firebase/firestore-service';\nimport {\n  Table,\n  TableBody,\n  TableCaption,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { format } from 'date-fns';\nimport { useMemo } from 'react';\n\ninterface ScoreTableProps {\n  sessions: FetchedStroopSession[];\n}\n\ninterface TableRoundDetail {\n    num: number;\n    idKey: string;\n    titleKey: string;\n    scoreKey: string;\n    trialsKey: string;\n    avgTimeKey: string;\n    displayTitle: string;\n}\n\nconst getAvailableRoundDetailsForTable = (sessions: FetchedStroopSession[]): TableRoundDetail[] => {\n    const details: TableRoundDetail[] = [];\n    if (sessions.length === 0) return details;\n\n    const firstSession = sessions[0];\n    const potentialRounds = [\n        { num: 1, idKey: 'round1Id', titleKey: 'round1Title', scoreKey: 'round1Score', trialsKey: 'round1Trials', avgTimeKey: 'round1AverageResponseTimeSeconds' },\n        { num: 2, idKey: 'round2Id', titleKey: 'round2Title', scoreKey: 'round2Score', trialsKey: 'round2Trials', avgTimeKey: 'round2AverageResponseTimeSeconds' },\n    ];\n\n    potentialRounds.forEach(rKey => {\n        if (sessions.some(session => session[rKey.scoreKey] !== undefined)) {\n            details.push({\n                ...rKey,\n                displayTitle: firstSession[rKey.titleKey] || `Round ${rKey.num}`\n            });\n        }\n    });\n    return details;\n};\n\n\nexport default function ScoreTable({ sessions }: ScoreTableProps) {\n  const availableRoundDetails = useMemo(() => getAvailableRoundDetailsForTable(sessions), [sessions]);\n\n  if (!sessions || sessions.length === 0) {\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"text-xl\">Session History</CardTitle>\n                <CardDescription>No session data available to display.</CardDescription>\n            </CardHeader>\n            <CardContent className=\"h-[200px] flex items-center justify-center\">\n                <p className=\"text-muted-foreground\">Play a game to see your history.</p>\n            </CardContent>\n        </Card>\n    );\n  }\n\n  if (availableRoundDetails.length === 0 && sessions.length > 0) {\n     return (\n        <Card>\n            <CardHeader>\n                <CardTitle className=\"text-xl\">Session History</CardTitle>\n                <CardDescription>Session data is present but round details could not be determined for the table.</CardDescription>\n            </CardHeader>\n             <CardContent className=\"h-[200px] flex items-center justify-center\">\n                <p className=\"text-muted-foreground\">Check session data structure.</p>\n            </CardContent>\n        </Card>\n    );\n  }\n\n  return (\n    <Card className=\"shadow-lg rounded-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-xl font-semibold\">Session History</CardTitle>\n        <CardDescription>A detailed list of your past Stroop Test sessions.</CardDescription>\n      </CardHeader>\n      <CardContent>\n        <div className=\"overflow-x-auto rounded-md border\">\n          <Table>\n            <TableCaption className=\"mt-4\">A list of your recent Stroop Test sessions.</TableCaption>\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"w-[180px] whitespace-nowrap font-semibold\">Date & Time</TableHead>\n                {availableRoundDetails.map(rDetail => (\n                  <TableHead key={`header-${rDetail.idKey}-score`} className=\"text-center whitespace-nowrap font-semibold\">\n                    {rDetail.displayTitle} Score\n                  </TableHead>\n                ))}\n                {availableRoundDetails.map(rDetail => (\n                  <TableHead key={`header-${rDetail.idKey}-avgtime`} className=\"text-center whitespace-nowrap font-semibold\">\n                    {rDetail.displayTitle} Avg. Time (s)\n                  </TableHead>\n                ))}\n                {availableRoundDetails.map(rDetail => (\n                  <TableHead key={`header-${rDetail.idKey}-trials`} className=\"text-center whitespace-nowrap font-semibold\">\n                    {rDetail.displayTitle} Trials\n                  </TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {sessions.map((session) => (\n                <TableRow key={session.id} className=\"hover:bg-muted/50\">\n                  <TableCell className=\"font-medium whitespace-nowrap\">\n                    {/* Convert ISO string back to Date for formatting */}\n                    {session.timestamp ? format(new Date(session.timestamp), 'MMM d, yyyy HH:mm') : 'N/A'}\n                  </TableCell>\n                  {availableRoundDetails.map(rDetail => (\n                    <TableCell key={`${session.id}-${rDetail.idKey}-score`} className=\"text-center\">\n                      {session[rDetail.scoreKey] ?? 'N/A'}\n                    </TableCell>\n                  ))}\n                  {availableRoundDetails.map(rDetail => (\n                      <TableCell key={`${session.id}-${rDetail.idKey}-avgtime`} className=\"text-center\">\n                      {typeof session[rDetail.avgTimeKey] === 'number' ? (session[rDetail.avgTimeKey] as number).toFixed(2) : 'N/A'}\n                      </TableCell>\n                  ))}\n                  {availableRoundDetails.map(rDetail => (\n                      <TableCell key={`${session.id}-${rDetail.idKey}-trials`} className=\"text-center\">\n                      {session[rDetail.trialsKey] ?? 'N/A'}\n                      </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1019, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/firebase/hosting/src/app/dashboard/page.tsx"],"sourcesContent":["\n\"use client\"; \n\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/auth-context';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Skeleton } from '@/components/ui/skeleton';\nimport { type FetchedStroopSession } from '@/lib/firebase/firestore-service';\nimport { fetchUserSessions } from '@/app/actions'; \nimport ProgressChart from '@/components/dashboard/progress-chart';\nimport ScoreTable from '@/components/dashboard/score-table';\n\nexport default function DashboardPage() {\n  const { user, loading: authLoading } = useAuth();\n  const router = useRouter();\n  const [sessions, setSessions] = useState<FetchedStroopSession[]>([]);\n  const [loadingSessions, setLoadingSessions] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (!authLoading && !user) {\n      const currentPath = typeof window !== 'undefined' ? window.location.pathname + window.location.search : '/dashboard';\n      router.push(`/login?redirect=${encodeURIComponent(currentPath)}`);\n    } else if (user && user.uid) {\n      setLoadingSessions(true);\n      setError(null); \n      \n      async function loadSessions() {\n        try {\n          const response = await fetchUserSessions(user.uid);\n          if (response && typeof response === 'object') {\n            if ('success' in response && response.success && response.data) {\n              setSessions(response.data);\n              setError(null);\n            } else if ('error' in response && typeof response.error === 'string') {\n              setError(response.error);\n              setSessions([]);\n            } else if (response.error && typeof (response.error as any).message === 'string') {\n              setError((response.error as any).message);\n              setSessions([]);\n            } else {\n              setError(\"Failed to load sessions due to an unknown error structure.\");\n              setSessions([]);\n            }\n          } else {\n              setError(\"Received an invalid or unexpected response from the server.\");\n              setSessions([]);\n          }\n        } catch (err: any) {\n            const displayError = (err instanceof Error && err.message) ? err.message : \"An unexpected error occurred while fetching sessions.\";\n            setError(displayError);\n            setSessions([]);\n        } finally {\n            setLoadingSessions(false);\n        }\n      }\n      loadSessions();\n    } else if (authLoading) {\n      setLoadingSessions(true); \n    }\n  }, [user, authLoading, router]);\n\n  if (authLoading || (!user && !authLoading) /* Wait for redirect or auth load */) {\n    return (\n      <main className=\"flex flex-1 flex-col items-center justify-center p-4\">\n        <div className=\"flex flex-col items-center space-y-2\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary\"></div>\n          <p className=\"text-muted-foreground\">Loading dashboard...</p>\n        </div>\n      </main>\n    );\n  }\n\n  return (\n    <main className=\"flex flex-1 flex-col p-4 sm:p-6 md:p-8 bg-muted/20\">\n      <div className=\"w-full max-w-6xl mx-auto space-y-8\">\n        <header className=\"flex flex-col sm:flex-row justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-3xl sm:text-4xl font-bold text-primary\">Your Dashboard</h1>\n            <p className=\"text-lg text-muted-foreground\">Track your Stroop Test Progress</p>\n          </div>\n          <Button asChild variant=\"default\" className=\"mt-4 sm:mt-0 shadow-md\">\n            <Link href=\"/\">Play New Game</Link>\n          </Button>\n        </header>\n\n        {loadingSessions && (\n          <div className=\"space-y-6\">\n            <Card>\n              <CardHeader><Skeleton className=\"h-8 w-1/3 rounded-md\" /></CardHeader>\n              <CardContent><Skeleton className=\"h-48 w-full rounded-md\" /></CardContent>\n            </Card>\n             <Card>\n              <CardHeader><Skeleton className=\"h-8 w-1/3 rounded-md\" /></CardHeader>\n              <CardContent><Skeleton className=\"h-64 w-full rounded-md\" /></CardContent>\n            </Card>\n           </div>\n        )}\n\n        {!loadingSessions && error && (\n          <Card className=\"border-destructive bg-destructive/10\">\n            <CardHeader>\n              <CardTitle className=\"text-destructive\">Error Loading Data</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-destructive-foreground\">Details: {error}</p>\n              <Button onClick={() => { // Re-fetch data\n                if (user && user.uid) {\n                  setLoadingSessions(true);\n                  setError(null);\n                  fetchUserSessions(user.uid).then(response => {\n                    if (response.success && response.data) {\n                      setSessions(response.data);\n                    } else {\n                      setError(response.error || \"Failed to reload sessions.\");\n                      setSessions([]);\n                    }\n                    setLoadingSessions(false);\n                  }).catch(err => {\n                     setError(err.message || \"Failed to reload sessions on retry.\");\n                     setSessions([]);\n                     setLoadingSessions(false);\n                  });\n                }\n              }} variant=\"outline\" className=\"mt-4\">Try Again</Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {!loadingSessions && !error && sessions.length === 0 && (\n          <Card className=\"text-center py-12\">\n            <CardHeader>\n              <CardTitle className=\"text-2xl\">No Data Yet!</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <p className=\"text-muted-foreground mb-4\">\n                You haven&apos;t completed any Stroop Test sessions.\n                <br />\n                Play a game to see your results populate here.\n              </p>\n              <Button asChild size=\"lg\" className=\"mt-4\">\n                <Link href=\"/\">Start Your First Stroop Test</Link>\n              </Button>\n            </CardContent>\n          </Card>\n        )}\n\n        {!loadingSessions && !error && sessions.length > 0 && (\n          <div className=\"grid gap-8\">\n            <ProgressChart sessions={sessions} />\n            <ScoreTable sessions={sessions} />\n          </div>\n        )}\n      </div>\n      <footer className=\"mt-12 text-center text-sm text-muted-foreground py-4 border-t\">\n        <p>&copy; {new Date().getFullYear()} StroopTest Challenge. All rights reserved.</p>\n      </footer>\n    </main>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}